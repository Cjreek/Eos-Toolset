<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="using:Eos.Usercontrols"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
             xmlns:types="using:Eos.Types"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Eos.Usercontrols.AlignmentMatrix"
             x:Name="ucAlignmentMatrix">
  <UserControl.Resources>
    <local:AlignmentToBoolConverter x:Key="alignmentToBoolConverter"/>
    <local:AlignmentValidToVisibilityConverter x:Key="alignmentValidToVisibilityConverter"/>
    <local:AlignmentButtonColorConverter x:Key="alignmentButtonColorConverter"/>

    <ControlTemplate x:Key="alignmentCheckbox">
      <Border Margin="1" BorderThickness="1" BorderBrush="SlateGray">
        <Border.Background>
          <MultiBinding Converter="{StaticResource alignmentButtonColorConverter}">
            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="IsEnabled"/>
            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="IsChecked"/>
          </MultiBinding>
        </Border.Background>

        <i:Interaction.Behaviors>
          <ia:EventTriggerBehavior EventName="Tapped">
            <ia:InvokeCommandAction Command="{Binding ElementName=ucAlignmentMatrix, Path=ToggleAlignmentCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}"/>
          </ia:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        
        <TextBlock Margin="5" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" FontWeight="Bold" TextAlignment="Center"/>
      </Border>
    </ControlTemplate>
  </UserControl.Resources>

  <Viewbox StretchDirection="Both" Stretch="Uniform">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="auto"/>
      </Grid.RowDefinitions>

      <Grid.Styles>
        <Style Selector="ToggleButton.alignment">
          <Setter Property="Template" Value="{StaticResource alignmentCheckbox}"/>
        </Style>
      </Grid.Styles>

      <ToggleButton Grid.Row="0" Grid.Column="0" Content="Lawful Good" BorderThickness="0.5,0.5,0.5,0.5" Classes="alignment" Tag="{x:Static types:Alignment.LawfulGood}"
                    IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.LawfulGood}}"
                    Command="{Binding ElementName=ucAlignmentMatrix, Path=ToggleAlignmentCommand}" CommandParameter="{x:Static types:Alignment.LawfulGood}"/>
      <ToggleButton Grid.Row="0" Grid.Column="1" Content="Neutral Good" Tag="{x:Static types:Alignment.NeutralGood}" BorderThickness="0,0.5,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.NeutralGood}}"/>
      <ToggleButton Grid.Row="0" Grid.Column="2" Content="Chaotic Good" Tag="{x:Static types:Alignment.ChaoticGood}" BorderThickness="0,0.5,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.ChaoticGood}}"/>

      <ToggleButton Grid.Row="1" Grid.Column="0" Content="Lawful Neutral" Tag="{x:Static types:Alignment.LawfulNeutral}" BorderThickness="0.5,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.LawfulNeutral}}"/>
      <ToggleButton Grid.Row="1" Grid.Column="1" Content="Neutral" Tag="{x:Static types:Alignment.Neutral}" BorderThickness="0,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.Neutral}}"/>
      <ToggleButton Grid.Row="1" Grid.Column="2" Content="Chaotic Neutral" Tag="{x:Static types:Alignment.ChaoticNeutral}" BorderThickness="0,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.ChaoticNeutral}}"/>

      <ToggleButton Grid.Row="2" Grid.Column="0" Content="Lawful Evil" Tag="{x:Static types:Alignment.LawfulEvil}" BorderThickness="0.5,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.LawfulEvil}}"/>
      <ToggleButton Grid.Row="2" Grid.Column="1" Content="Neutral Evil" Tag="{x:Static types:Alignment.NeutralEvil}" BorderThickness="0,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.NeutralEvil}}"/>
      <ToggleButton Grid.Row="2" Grid.Column="2" Content="Chaotic Evil" Tag="{x:Static types:Alignment.ChaoticEvil}" BorderThickness="0,0,0.5,0.5" Classes="alignment"
                IsChecked="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentToBoolConverter}, ConverterParameter={x:Static types:Alignment.ChaoticEvil}}"/>

      <Grid Grid.Row="4" Grid.ColumnSpan="3" Height="25">
        <TextBlock Text="This is not a valid alignment restriction!" TextAlignment="Center" Margin="1,5,0,0" Foreground="Red" FontWeight="Bold"
                   IsVisible="{Binding ElementName=ucAlignmentMatrix, Path=Alignment, Mode=OneWay, Converter={StaticResource alignmentValidToVisibilityConverter}}" />
      </Grid>
    </Grid>
  </Viewbox>
</UserControl>
