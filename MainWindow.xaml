<Window x:Class="Eos.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Eos"
        xmlns:wpftk="clr-namespace:Xceed.Wpf.Toolkit;assembly=DotNetProjects.Wpf.Extended.Toolkit"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:vm="clr-namespace:Eos.ViewModels"
        xmlns:view="clr-namespace:Eos.Views"
        xmlns:conv="clr-namespace:Eos.Extensions"
        xmlns:repo="clr-namespace:Eos.Repositories"
        xmlns:ext="clr-namespace:Eos.Extensions"
        xmlns:types="clr-namespace:Eos.Types"
        xmlns:uc="clr-namespace:Eos.Usercontrols"
        xmlns:nwn="clr-namespace:Eos.Nwn"
        xmlns:tlk="clr-namespace:Eos.Nwn.Tlk"
        xmlns:models="clr-namespace:Eos.Models"
        mc:Ignorable="d"
        x:Name="mainWindow"
        MinHeight="300" MinWidth="500" Tag="Eos Toolset"
        Height="650" Width="1000" FontSize="16">
    <Window.Title>
        <MultiBinding StringFormat="{}{0} - {1}">
            <Binding ElementName="mainWindow" Path="Tag"/>
            <Binding Source="{x:Static repo:MasterRepository.Project}" Path="Name"/>
        </MultiBinding>
    </Window.Title>
    <Window.DataContext>
        <vm:MainViewModel x:Name="viewModel"/>
    </Window.DataContext>

    <Window.Resources>
        <conv:BoolToVisibilityConverterEx FalseValue="Hidden" x:Key="Bool2Vis"/>
        <conv:BoolToVisibilityConverterEx FalseValue="Collapsed" x:Key="Bool2VisCollapsed"/>
        <conv:TLKStringSetConverter x:Key="tlkConverter" AlwaysUseDefaultLanguage="True"/>
        <conv:ResRefConverter x:Key="resRefConverter"/>

        <DataTemplate x:Key="TreeViewItemTemplate">
            <ContentControl>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Path=OpenDetailCommand, ElementName=viewModel}" CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <StackPanel Orientation="Horizontal">
                    <Image Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource resRefConverter}, ConverterParameter={x:Static nwn:NWNResourceType.TGA}}" Margin="0,0,3,0">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource tlkConverter}">
                                <Binding Path="Name"/>
                                <Binding ElementName="viewModel" Path="CurrentLanguage"/>
                                <Binding ElementName="viewModel" Path="CurrentGender"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </ContentControl>
        </DataTemplate>

        <Style TargetType="TreeViewItem">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ItemTemplate" Value="{StaticResource TreeViewItemTemplate}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="CATEGORY">
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{Binding EntityColor}"/>
        </Style>

        <!-- TabControl ItemTemplate -->
        <DataTemplate x:Key="TabItemTemplate">
            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Left">
                <Image Source="{Binding Data.Icon, Converter={StaticResource resRefConverter}, ConverterParameter={x:Static nwn:NWNResourceType.TGA}}" Width="16" Height="16" Margin="0,0,3,0">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Data.Icon}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Text="{Binding Header}" MinWidth="50">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="Black"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Data.IsReadonly}" Value="True">
                                    <Setter Property="Foreground" Value="DimGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Button Content="x" Command="{Binding Path=CloseDetailCommand, ElementName=viewModel}" CommandParameter="{Binding Data}"
                        Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Converter={StaticResource Bool2Vis}}" Margin="5,0,0,0" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent">
                                            <Path x:Name="buttonPath" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" Data="M 0,7 L 10,17 M 10,7 L 0,17"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="DarkRed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </DataTemplate>

        <!-- Tab Content Datatemplates -->
        <DataTemplate DataType="{x:Type vm:RaceViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:RaceView DataContext="{Binding}" 
                                   TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                   Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:ClassViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:ClassView DataContext="{Binding}" 
                                    TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                    Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:DomainViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:DomainView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SpellViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SpellView DataContext="{Binding}" 
                                    TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                    Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:FeatViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:FeatView DataContext="{Binding}" 
                                   TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                   Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SkillViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SkillView DataContext="{Binding}" 
                                    TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                    Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:DiseaseViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:DiseaseView DataContext="{Binding}" 
                                      TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                      Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:PoisonViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:PoisonView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <!--Tables-->

        <DataTemplate DataType="{x:Type vm:FeatsTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:FeatsTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:AttackBonusTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:AttackBonusTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:BonusFeatTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:BonusFeatTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SkillTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SkillTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SavingThrowTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SavingThrowTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:PrerequisiteTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:PrerequisiteTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:StatGainTableViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:StatGainTableView DataContext="{Binding}" 
                                     TLKLanguage="{Binding ElementName=mainWindow, Path=DataContext.CurrentLanguage, Mode=OneWay}" 
                                     Gender="{Binding ElementName=mainWindow, Path=DataContext.CurrentGender, Mode=OneWay}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>
    </Window.Resources>
    
    <!-- Window Content -->
    <DockPanel>
        <Menu DockPanel.Dock="Top" FontSize="16">
            <MenuItem Header="File">
                <MenuItem Header="New Project" Command="{Binding Path=NewProjectCommand}"/>
                <MenuItem x:Name="miOpenProject" Header="Open Project" Click="miOpenProject_Click"/>
                <MenuItem x:Name="miSaveProject" Header="Save" Click="miSaveProject_Click"/>
                <Separator/>
                <MenuItem x:Name="miExit" Header="Exit" Click="miExit_Click"/>
            </MenuItem>
        </Menu>

        <Border Height="38" DockPanel.Dock="Top" BorderThickness="0,1,0,1" BorderBrush="Gray">
            <Grid Margin="10,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="Language" VerticalAlignment="Center"/>
                    <uc:EnumComboBox Margin="3,0,0,0" Width="150" ItemsSource="{ext:EnumSource {x:Type tlk:TLKLanguage}}" SelectedValue="{Binding CurrentLanguage, Mode=TwoWay}" VerticalAlignment="Center"/>
                    <ToggleButton Margin="3,0,0,0" IsChecked="{Binding CurrentGender, Mode=TwoWay}" VerticalAlignment="Center" Width="24">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Content" Value="M"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="True">
                                        <Setter Property="Content" Value="F"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </Border>
    
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TabControl Grid.Column="0" Margin="5,5,0,5" TabStripPlacement="Top" SelectedItem="{x:Reference tabCustom}">
                <TabItem x:Name="tabStandard" Header="Standard">
                    <TreeView ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <TreeViewItem Header="Races" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Races}"/>
                        <TreeViewItem Header="Classes" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Classes}"/>
                        <TreeViewItem Header="Domains" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Domains}"/>
                        <TreeViewItem Header="Spells" Tag="CATEGORY">
                            <TreeViewItem Header="Spell" Tag="CATEGORY">
                                <TreeViewItem Header="Abjuration" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.AbjurationSpells}"/>
                                <TreeViewItem Header="Conjuration" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.ConjurationSpells}"/>
                                <TreeViewItem Header="Divination" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.DivinationSpells}"/>
                                <TreeViewItem Header="Enchantment" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.EnchantmentSpells}"/>
                                <TreeViewItem Header="Evocation" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.EvocationSpells}"/>
                                <TreeViewItem Header="Illusion" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.IllusionSpells}"/>
                                <TreeViewItem Header="Necromancy" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.NecromancySpells}"/>
                                <TreeViewItem Header="Transmutation" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.TransmutationSpells}"/>
                                <TreeViewItem Header="General" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.GeneralSpells}"/>
                            </TreeViewItem>
                            <TreeViewItem Header="Creature Power" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.CreaturePowers}"/>
                            <TreeViewItem Header="Feat" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.FeatSpells}"/>
                            <TreeViewItem Header="Other" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Spells.OtherSpells}"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Feats" Tag="CATEGORY">
                            <TreeViewItem Header="Class/Racial" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.ClassOrRacial}"/>
                            <TreeViewItem Header="Combat (Active)" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.CombatActive}"/>
                            <TreeViewItem Header="Combat (Passive)" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.Combat}"/>
                            <TreeViewItem Header="Defensive" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.Defensive}"/>
                            <TreeViewItem Header="Magical" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.Magical}"/>
                            <TreeViewItem Header="Other" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Feats.Other}"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Skills" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Skills}"/>
                        <TreeViewItem Header="Diseases" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Diseases}"/>
                        <TreeViewItem Header="Poisons" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=Poisons}"/>

                        <TreeViewItem Header="Tables" Tag="CATEGORY">
                            <TreeViewItem Header="Feats" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=FeatTables}"/>
                            <TreeViewItem Header="Bonus Feats" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=BonusFeatTables}"/>
                            <TreeViewItem Header="Skills" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=SkillTables}"/>
                            <TreeViewItem Header="BAB" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=AttackBonusTables}"/>
                            <TreeViewItem Header="Saving Throws" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=SavingThrowTables}"/>
                            <TreeViewItem Header="Prerequisites" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=PrerequisiteTables}"/>
                            <TreeViewItem Header="StatGain" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Standard}, Path=StatGainTables}"/>
                        </TreeViewItem>
                    </TreeView>
                </TabItem>
                <TabItem x:Name="tabCustom" Header="Custom">
                    <TreeView>
                        <TreeViewItem Header="Races" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Races}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding Path=NewDetailCommand, ElementName=viewModel}" CommandParameter="{x:Type models:Race}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TreeViewItem>
                        <TreeViewItem Header="Classes" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Classes}"/>
                        <TreeViewItem Header="Domains" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Domains}"/>
                        <TreeViewItem Header="Spells" Tag="CATEGORY">
                            <TreeViewItem Header="Spell" Tag="CATEGORY">
                                <TreeViewItem Header="Abjuration" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.AbjurationSpells}"/>
                                <TreeViewItem Header="Conjuration" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.ConjurationSpells}"/>
                                <TreeViewItem Header="Divination" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.DivinationSpells}"/>
                                <TreeViewItem Header="Enchantment" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.EnchantmentSpells}"/>
                                <TreeViewItem Header="Evocation" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.EvocationSpells}"/>
                                <TreeViewItem Header="Illusion" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.IllusionSpells}"/>
                                <TreeViewItem Header="Necromancy" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.NecromancySpells}"/>
                                <TreeViewItem Header="Transmutation" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.TransmutationSpells}"/>
                                <TreeViewItem Header="General" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.GeneralSpells}"/>
                            </TreeViewItem>
                            <TreeViewItem Header="Creature Power" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.CreaturePowers}"/>
                            <TreeViewItem Header="Feat" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.FeatSpells}"/>
                            <TreeViewItem Header="Other" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Spells.OtherSpells}"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Feats" Tag="CATEGORY">
                            <TreeViewItem Header="Class/Racial" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.ClassOrRacial}"/>
                            <TreeViewItem Header="Combat (Active)" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.CombatActive}"/>
                            <TreeViewItem Header="Combat (Passive)" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.Combat}"/>
                            <TreeViewItem Header="Defensive" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.Defensive}"/>
                            <TreeViewItem Header="Magical" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.Magical}"/>
                            <TreeViewItem Header="Other" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Feats.Other}"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Skills" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Skills}"/>
                        <TreeViewItem Header="Diseases" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Diseases}"/>
                        <TreeViewItem Header="Poisons" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=Poisons}"/>

                        <TreeViewItem Header="Tables" Tag="CATEGORY">
                            <TreeViewItem Header="Feats" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=FeatTables}"/>
                            <TreeViewItem Header="Bonus Feats" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=BonusFeatTables}"/>
                            <TreeViewItem Header="Skills" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=SkillTables}"/>
                            <TreeViewItem Header="BAB" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=AttackBonusTables}"/>
                            <TreeViewItem Header="Saving Throws" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=SavingThrowTables}"/>
                            <TreeViewItem Header="Prerequisites" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=PrerequisiteTables}"/>
                            <TreeViewItem Header="StatGain" Tag="CATEGORY" ItemsSource="{Binding Source={x:Static repo:MasterRepository.Project}, Path=StatGainTables}"/>
                        </TreeViewItem>
                    </TreeView>
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="Transparent"/>
            
            <TabControl Grid.Column="2" Margin="0,3,5,5" Padding="0"
                        ItemsSource="{Binding DetailViewList}" ItemTemplate="{StaticResource TabItemTemplate}" 
                        SelectedItem="{Binding CurrentView}"/>
        </Grid>
    </DockPanel>
</Window>
