<Window x:Class="Eos.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Eos"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:vm="clr-namespace:Eos.ViewModels"
        xmlns:view="clr-namespace:Eos.Views"
        xmlns:conv="clr-namespace:Eos.Extensions"
        mc:Ignorable="d"
        MinHeight="600" MinWidth="1000"
        Title="Eos Toolset" Height="600" Width="1000" FontSize="16">
    <Window.DataContext>
        <vm:MainViewModel x:Name="viewModel"/>
    </Window.DataContext>

    <Window.Resources>
        <conv:BoolToVisibilityConverterEx FalseValue="Hidden" x:Key="Bool2Vis"/>

        <!-- TreeViewItem Datatemplates -->
        <DataTemplate x:Key="TreeViewItemTemplate">
            <ContentControl>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Path=OpenDetailCommand, ElementName=viewModel}" CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <TextBlock Text="{Binding Path=Name}"/>
            </ContentControl>
        </DataTemplate>

        <Style TargetType="TreeViewItem">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="ItemTemplate" Value="{StaticResource TreeViewItemTemplate}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ItemsSource}" Value="{x:Null}">
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="ItemTemplate" Value="{x:Null}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{Binding Color}"/>
        </Style>

        <!-- TabControl ItemTemplate -->
        <DataTemplate x:Key="TabItemTemplate">
            <StackPanel Orientation="Horizontal" Margin="0">
                <TextBlock Text="{Binding Header}" MinWidth="50"/>
                <Button Content="x" Command="{Binding Path=CloseDetailCommand, ElementName=viewModel}" CommandParameter="{Binding}" 
                                Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Converter={StaticResource Bool2Vis}}" Margin="5,0,0,0" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent">
                                            <Path x:Name="buttonPath" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" Data="M 0,7 L 10,17 M 10,7 L 0,17"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="DarkRed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </DataTemplate>

        <!-- Tab Content Datatemplates -->
        <DataTemplate DataType="{x:Type vm:RaceViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:RaceView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:ClassViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:ClassView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:DomainViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:DomainView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SpellViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SpellView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:FeatViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:FeatView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SkillViewModel}">
            <Frame DataContext="{Binding}" LoadCompleted="Frame_LoadCompleted" DataContextChanged="Frame_DataContextChanged">
                <Frame.Content>
                    <view:SkillView DataContext="{Binding}"/>
                </Frame.Content>
            </Frame>
        </DataTemplate>
    </Window.Resources>
    
    <!-- Window Content -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>

        <TreeView Grid.Column="0" Margin="5">
            <TreeViewItem Header="Races" ItemsSource="{Binding RaceRepository}"/>
            <TreeViewItem Header="Classes" ItemsSource="{Binding ClassRepository}"/>
            <TreeViewItem Header="Domains" ItemsSource="{Binding DomainRepository}"/>
            <TreeViewItem Header="Spells" ItemsSource="{Binding SpellRepository}"/>
            <TreeViewItem Header="Feats" ItemsSource="{Binding FeatRepository}"/>
            <TreeViewItem Header="Skills" ItemsSource="{Binding SkillRepository}"/>
        </TreeView>

        <TabControl Grid.Column="1" Margin="0,3,5,5" Padding="0"
                    ItemsSource="{Binding DetailViewList}" ItemTemplate="{StaticResource TabItemTemplate}" 
                    SelectedItem="{Binding CurrentView}"/>
    </Grid>
</Window>
